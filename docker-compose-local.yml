version: '3.7'

services:

  db:
    volumes:
      - voldb:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"

  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
    depends_on:
      - backend
      - api
      - frontend
    ports:
      - "127.0.0.1:80:80"
    volumes:
      - ./nginx/svgs:/svgs

  backend:
    command: bash -c "python manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/project
      - ./utils/annotation:/project/annotation

  frontend:
    container_name: frontend
    depends_on:
      - backend
      - api
    build: ./frontend
    command: npm run serve
    volumes:
      - ./frontend/src:/project/src
      - ./frontend/public:/project/public
    networks:
      - net-tier
    ports:
      - "127.0.0.1:81:81"

  neo4j:
    container_name: neo4j
    image: neo4j:4.0.6
    environment:
      - NEO4J_AUTH=none
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4JLABS_PLUGINS=["apoc"] 
    volumes:
      - ./utils/mockData/data:/var/lib/neo4j/import/
      - ./neo4j/plugins:/plugins
    networks:
      - net-tier
    ports:
      - "127.0.0.1:7474:7474"
      - "127.0.0.1:7687:7687"

  api:
    container_name: api
    build: ./api
    volumes:
      - ./api/src:/project/src
    command: npm run develop
    networks:
      - net-tier

volumes:
  voldb:
